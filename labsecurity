#!/bin/python
# Copyright Â©2021 - 2022 by Dylan Meca. All rights reserved. 
import os
import sys
import time
from colorama import init, Fore, Style
from libsecurity.main import *
from libsecurity.scanners import *

init(autoreset=True)

scanner = scanner ()
interpreter = interpreter ()

print ("""

   __     __                        _ __
  / /__ _/ /  ___ ___ ______ ______(_) /___ __
 / / _ `/ _ \(_-</ -_) __/ // / __/ / __/ // /
/_/\_,_/_.__/___/\__/\__/\_,_/_/ /_/\__/\_, /
                                       /___/
""")

print ("Homepage: https://github.com/dylan14567/labsecurity")
print ("Use the help command for more information about the commands")

def terminal ():
         
         while True:
               
               try:
                   user = input ("labsecurity > ")
                   prompt = user.split ()

                   if not prompt:
                         os.system ("cd")
                   elif prompt[0] == 'help':
                         interpreter.help ()
                   elif prompt[0] == 'set':
                         #Here is the part where the selections are put
                         if prompt[1] == 'target':
                               global target
                               print (Style.BRIGHT + Fore.GREEN + "target =>", prompt[2])
                               target = prompt[2]
                         elif prompt[1] == 'port':
                               global port
                               print (Style.BRIGHT + Fore.GREEN + "port =>", prompt[2])
                               port = prompt[2]
                         else:
                               print (Style.BRIGHT + Fore.RED + "[*] ERROR, use the help command for more information")
                   elif prompt[0] == 'use':
                         global use
                         #Here is the part where one of the following categories is used
                         if prompt[1] == 'scanweb':
                               print (Style.BRIGHT + Fore.GREEN + "use =>", prompt[1])
                               use = prompt[1]
                         elif prompt[1] == 'scanports':
                               print (Style.BRIGHT + Fore.GREEN + "use =>", prompt [1])
                               use = prompt[1]
                         elif prompt[1] == 'scanport':
                               print (Style.BRIGHT + Fore.GREEN + "use =>", prompt[1])
                               use = prompt[1]
                         elif prompt[1] == 'scanip':
                               print (Style.BRIGHT + Fore.GREEN + "use =>", prompt[1])
                               use = prompt[1]
                         else:
                               print (Style.BRIGHT + Fore.RED + "[*] ERROR, use the help command for more information")
                   elif prompt[0] == 'clear':
                         os.system ("clear")
                   elif prompt[0] == 'ls':
                         command = interpreter.command_ls ()
                         os.system (command)
                   elif prompt[0] == 'exit' or prompt[0] == 'quit':
                         break
                   elif prompt[0] == 'run' or prompt[0] == 'exploit':
                         if use == 'scanweb':
                             print (Style.BRIGHT  + Fore.BLUE + "[*] Scanning website...")
                             scanner.scanweb (target1)
                         elif use == 'scanports':
                             print (Style.BRIGHT + Fore.BLUE + "[*] Scanning ports...")
                             scanner.scanports(target1)
                         elif use == 'scanport':
                             print (Style.BRIGHT + Fore.BLUE + "[*] Scanning port...")
                             scanner.scanport (target1, port1)
                         elif use == 'scanip':
                             print (Style.BRIGHT + Fore.BLUE + "[*] Scanning ip...")
                             scanner.scanip (target1)
                         else:
                             print (Style.BRIGHT + Fore.RED + "[*] ERROR, use the help command for more information")
                   else:
                         print (Style.BRIGHT + Fore.RED + "[*] ERROR, use the help command for more information")

               except ValueError:
                        print (Style.BRIGHT + Fore.RED + "[*] Error, there is a type of error.")
                        sys.exit ()
               except KeyboardInterrupt:
                        print (Style.BRIGHT + Fore.BLUE + "[*] Exiting...")
                        sys.exit ()
               except NameError:
                        print (Style.BRIGHT + Fore.RED + "[*] Error, the command I use is not defined in the program code.")
                        sys.exit ()
               except SyntaxError:
                        print (Style.BRIGHT + Fore.RED + "[*] Error, the code has a syntax error.")
                        sys.exit ()
               except TypeError:
                        print (Style.BRIGHT + Fore.RED + "[*] Error, the code is misspelled.")
                        sys.exit ()
               except IndexError:
                        print (Style.BRIGHT + Fore.RED + "[*] Error, the command you used is incomplete.")
                        sys.exit ()
               

if __name__ == '__main__':
         terminal ()
